version: '3.8'

services:
  vnstat-dashboard:
    build: .
    container_name: vnstat-dashboard
    restart: unless-stopped
    
    # Network configuration
    # Use host network to access host's network interfaces
    network_mode: host
    
    # Port mapping (only needed if not using host network)
    # ports:
    #   - "5000:5000"
    
    # Volume mounts
    volumes:
      # Mount vnStat database (read-only)
      - /var/lib/vnstat:/var/lib/vnstat:ro
      
      # Mount configuration file
      - ./config.py:/app/config.py:ro
      
      # Mount logs directory (optional)
      - ./logs:/app/logs
      
      # Mount custom templates (optional)
      # - ./custom-templates:/app/templates:ro
    
    # Environment variables
    environment:
      # Set to 'true' for debug mode (not recommended for production)
      - DEBUG=false
      
      # Override configuration via environment variables (optional)
      # - VNSTAT_IFACE=eth0
      # - WEB_PORT=5000
      # - LOG_LEVEL=INFO
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Resource limits (optional but recommended)
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # User and group (matches Dockerfile)
    user: "1000:1000"  # Adjust to match vnstat user/group IDs
    
    # Working directory
    working_dir: /app
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Labels for organization
    labels:
      - "com.example.service=vnstat-dashboard"
      - "com.example.description=Network traffic monitoring dashboard"
      - "com.example.version=2.0.0"

# Optional: separate network (if not using host network)
# networks:
#   vnstat-net:
#     driver: bridge
#     ipam:
#       config:
#         - subnet: 172.20.0.0/16

# Optional: volumes for persistent data
volumes:
  vnstat-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs

# Optional: secrets for sensitive configuration
# secrets:
#   vnstat-config:
#     file: ./config.py